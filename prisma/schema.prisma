// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Module {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  permissions Permission[]
}

model Permission {
  id            Int             @id @default(autoincrement())
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  moduleId      Int
  module        Module          @relation(fields: [moduleId], references: [id])
  RolPermission RolPermission[]
}

model RolPermission {
  id           Int        @id @default(autoincrement())
  rolId        Int
  permissionId Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  rol          UserRol    @relation(fields: [rolId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@index([rolId], name: "RolPermissionrolId")
  @@index([permissionId], name: "RolPermissionpermissionId")
}

model UserRol {
  id             Int             @id @default(autoincrement())
  name           String
  users          User[]
  rolPermissions RolPermission[]
}

model User {
  id              String        @id @default(uuid())
  firstName       String
  lastName        String
  fullName        String
  email           String
  imageUrl        String
  password        String
  rolId           Int
  generalStatusId Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  rol             UserRol       @relation(fields: [rolId], references: [id])
  generalStatus   GeneralStatus @relation(fields: [generalStatusId], references: [id])
  carts           Cart[]
  cartOrders      CartOrder[]

  @@index([fullName], name: "UserfullName")
  @@index([rolId], name: "UserrolId")
  @@index([generalStatusId], name: "UsergeneralStatusId")
}

model GeneralStatus {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User[]
  Product   Product[]
}

model Product {
  id                Int               @id @default(autoincrement())
  code              String            @unique
  name              String
  description       String
  price             Int
  cost              Int
  stock             Int               @default(0)
  imageUrl          String
  productCategoryId Int
  productStatusId   Int
  generalStatusId   Int
  updatedAt         DateTime          @updatedAt
  createdAt         DateTime          @default(now())
  productStatus     ProductStatus     @relation(fields: [productStatusId], references: [id])
  productCategory   ProductCategory   @relation(fields: [productCategoryId], references: [id])
  generalStatus     GeneralStatus     @relation(fields: [generalStatusId], references: [id])
  orderDetails      CartOrderDetail[]
  cartDetails       CartDetail[]

  @@index([productCategoryId], name: "productCategoryId")
  @@index([name], name: "name")
  @@index([code], name: "code")
}

model ProductCategory {
  id               Int       @id @default(autoincrement())
  categoryCode     String
  name             String
  categoryLevel    Int
  parentCategoryId Int?
  imageUrl         String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  description      String
  products         Product[]

  parentCategory  ProductCategory?  @relation("ChildCategories", fields: [parentCategoryId], references: [id])
  childCategories ProductCategory[] @relation("ChildCategories")
}

model ProductStatus {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Cart {
  id               String       @id @default(uuid())
  quantity         Int
  total            BigInt
  subTotal         BigInt
  subTotalDiscount BigInt
  subTotalTax      BigInt
  discount         BigInt
  tax              BigInt
  userId           String
  cartStatusId     Int
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  user             User         @relation(fields: [userId], references: [id])
  cartStatus       CartStatus   @relation(fields: [cartStatusId], references: [id])
  cartDetail       CartDetail[]
}

model CartDetail {
  id               Int           @id @default(autoincrement())
  cartId           String
  productId        Int
  quantity         Int
  salePrice        BigInt
  total            BigInt
  subTotal         BigInt
  subTotalDiscount BigInt
  subTotalTax      BigInt
  discount         BigInt
  tax              BigInt
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  colorDiscountId  Int
  taxRateId        Int
  product          Product       @relation(fields: [productId], references: [id])
  colorDiscount    ColorDiscount @relation(fields: [colorDiscountId], references: [id])
  cart             Cart          @relation(fields: [cartId], references: [id])
  taxRate          TaxRate       @relation(fields: [taxRateId], references: [id])

  @@index([productId], name: "CartDetailproductId")
}

model CartStatus {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  carts     Cart[]
}

model CartOrder {
  id               String            @id @default(uuid())
  userId           String
  paymentMethodId  Int
  quantity         Int
  total            BigInt
  subTotal         BigInt
  subTotalDiscount BigInt
  subTotalTax      BigInt
  discount         BigInt
  tax              BigInt
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  user             User              @relation(fields: [userId], references: [id])
  paymentMethod    PaymentMethods    @relation(fields: [paymentMethodId], references: [id])
  OrderDetail      CartOrderDetail[]

  @@index([userId], name: "CartOrderuserId")
  @@index([paymentMethodId], name: "CartOrderpaymentMethodId")
}

model CartOrderDetail {
  id                  Int            @id @default(autoincrement())
  orderId             String
  productId           Int
  quantity            Int
  salePrice           BigInt
  total               BigInt
  discount            BigInt
  tax                 BigInt
  discountPerecentage BigInt
  colorDiscountId     Int
  taxRateId           Int
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  product             Product        @relation(fields: [productId], references: [id])
  order               CartOrder      @relation(fields: [orderId], references: [id])
  colorDiscount       ColorDiscount? @relation(fields: [colorDiscountId], references: [id])
  taxRate             TaxRate?       @relation(fields: [taxRateId], references: [id])

  @@index([orderId], name: "OrderDetailorderId")
  @@index([productId], name: "OrderDetailproductId")
}

model ColorDiscount {
  id                 Int               @id @default(autoincrement())
  name               String
  discountPercentage BigInt
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  orderDetails       CartOrderDetail[]
  cartDetails        CartDetail[]
}

model TaxRate {
  id           Int               @id @default(autoincrement())
  name         String
  rate         BigInt
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  cartDetails  CartDetail[]
  orderDetails CartOrderDetail[]
}

model PaymentMethods {
  id         Int         @id @default(autoincrement())
  name       String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  cartOrders CartOrder[]
}
